{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/mediasession.js"],"names":["MediaSessionPlugin","params","name","deferInit","instance","ws","wavesurfer","navigator","metadata","update","on","mediaSession","setActionHandler","play","playPause","skipBackward","skipForward","MediaMetadata","Function"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;AAEA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;IAyBqBA,kB;;;;;;AACjB;;;;;;;;;2BAScC,M,EAAQ;AAClB,aAAO;AACHC,YAAI,EAAE,cADH;AAEHC,iBAAS,EAAEF,MAAM,IAAIA,MAAM,CAACE,SAAjB,GAA6BF,MAAM,CAACE,SAApC,GAAgD,KAFxD;AAGHF,cAAM,EAAEA,MAHL;AAIHG,gBAAQ,EAAEJ;AAJP,OAAP;AAMH;;;AAED,8BAAYC,MAAZ,EAAoBI,EAApB,EAAwB;AAAA;;AAAA;;AACpB,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKK,UAAL,GAAkBD,EAAlB;;AAEA,QAAI,kBAAkBE,SAAtB,EAAiC;AAC7B;AACA,WAAKC,QAAL,GAAgB,KAAKP,MAAL,CAAYO,QAA5B;AACA,WAAKC,MAAL,GAH6B,CAK7B;;AACA,WAAKH,UAAL,CAAgBI,EAAhB,CAAmB,MAAnB,EAA2B,YAAM;AAC7B,aAAI,CAACD,MAAL;AACH,OAFD,EAN6B,CAU7B;;AACAF,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,MAAxC,EAAgD,YAAM;AAClD,aAAI,CAACN,UAAL,CAAgBO,IAAhB;AACH,OAFD;AAGAN,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,OAAxC,EAAiD,YAAM;AACnD,aAAI,CAACN,UAAL,CAAgBQ,SAAhB;AACH,OAFD;AAGAP,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,cAAxC,EAAwD,YAAM;AAC1D,aAAI,CAACN,UAAL,CAAgBS,YAAhB;AACH,OAFD;AAGAR,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,aAAxC,EAAuD,YAAM;AACzD,aAAI,CAACN,UAAL,CAAgBU,WAAhB;AACH,OAFD;AAGH;AACJ;;;;2BAEM,CAAE;;;8BAEC,CAAE;;;6BAEH;AACL,UAAI,QAAOC,aAAP,yCAAOA,aAAP,eAAgCC,QAAhC,yCAAgCA,QAAhC,EAAJ,EAA8C;AAC1C;AACAX,iBAAS,CAACI,YAAV,CAAuBH,QAAvB,GAAkC,IAAIS,aAAJ,CAAkB,KAAKT,QAAvB,CAAlC;AACH;AACJ","file":"wavesurfer.mediasession.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mediasession\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mediasession\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"mediasession\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin/mediasession.js\");\n","/*global MediaMetadata*/\r\n\r\n/**\r\n * @typedef {Object} MediaSessionPluginParams\r\n * @property {MediaMetadata} metadata A MediaMetadata object: a representation\r\n * of the metadata associated with a MediaSession that can be used by user agents\r\n * to provide a customized user interface.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('mediasession')`\r\n */\r\n\r\n/**\r\n * Visualize MediaSession information for a wavesurfer instance.\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n * @example\r\n * // es6\r\n * import MediaSessionPlugin from 'wavesurfer.mediasession.js';\r\n *\r\n * // commonjs\r\n * var MediaSessionPlugin = require('wavesurfer.mediasession.js');\r\n *\r\n * // if you are using <script> tags\r\n * var MediaSessionPlugin = window.WaveSurfer.mediasession;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     MediaSessionPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class MediaSessionPlugin {\r\n    /**\r\n     * MediaSession plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param  {MediaSessionPluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'mediasession',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            instance: MediaSessionPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n\r\n        if ('mediaSession' in navigator) {\r\n            // update metadata\r\n            this.metadata = this.params.metadata;\r\n            this.update();\r\n\r\n            // update metadata when playback starts\r\n            this.wavesurfer.on('play', () => {\r\n                this.update();\r\n            });\r\n\r\n            // set playback action handlers\r\n            navigator.mediaSession.setActionHandler('play', () => {\r\n                this.wavesurfer.play();\r\n            });\r\n            navigator.mediaSession.setActionHandler('pause', () => {\r\n                this.wavesurfer.playPause();\r\n            });\r\n            navigator.mediaSession.setActionHandler('seekbackward', () => {\r\n                this.wavesurfer.skipBackward();\r\n            });\r\n            navigator.mediaSession.setActionHandler('seekforward', () => {\r\n                this.wavesurfer.skipForward();\r\n            });\r\n        }\r\n    }\r\n\r\n    init() {}\r\n\r\n    destroy() {}\r\n\r\n    update() {\r\n        if (typeof MediaMetadata === typeof Function) {\r\n            // set metadata\r\n            navigator.mediaSession.metadata = new MediaMetadata(this.metadata);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}