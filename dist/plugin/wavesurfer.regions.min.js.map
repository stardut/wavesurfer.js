{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","_this","this","_classCallCheck","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","loop","color","data","attributes","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","bindInOut","render","on","fireEvent","element","removeChild","un","play","_this2","once","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","left","width","maxWidth","bindEvents","map","time","Math","floor","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","backgroundColor","_this3","firedIn","firedOut","onProcess","backend","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","duration","updated","onDown","onUp","onMove","_this4","addEventListener","e","preventDefault","stopPropagation","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","preventClick","oldTime","delta","onDrag","onResize","regionRect","x","right","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","_this5","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","_this6","_this7","remove","_this8","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","_this9","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\r\n * (Single) Region plugin class\r\n *\r\n * Must be turned into an observer before instantiating. This is done in\r\n * `RegionsPlugin` (main plugin class).\r\n *\r\n * @extends {Observer}\r\n */\r\nclass Region {\r\n    constructor(params, ws) {\r\n        this.wavesurfer = ws;\r\n        this.wrapper = ws.drawer.wrapper;\r\n        this.util = ws.util;\r\n        this.style = this.util.style;\r\n\r\n        this.id = params.id == null ? ws.util.getId() : params.id;\r\n        this.start = Number(params.start) || 0;\r\n        this.end =\r\n            params.end == null\r\n                ? // small marker-like region\r\n                  this.start +\r\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\r\n                : Number(params.end);\r\n        this.resize =\r\n            params.resize === undefined ? true : Boolean(params.resize);\r\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\r\n        this.loop = Boolean(params.loop);\r\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\r\n        this.data = params.data || {};\r\n        this.attributes = params.attributes || {};\r\n\r\n        this.maxLength = params.maxLength;\r\n        this.minLength = params.minLength;\r\n        this._onRedraw = () => this.updateRender();\r\n\r\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\r\n        this.scrollSpeed = params.scrollSpeed || 1;\r\n        this.scrollThreshold = params.scrollThreshold || 10;\r\n\r\n        this.bindInOut();\r\n        this.render();\r\n        this.wavesurfer.on('zoom', this._onRedraw);\r\n        this.wavesurfer.on('redraw', this._onRedraw);\r\n        this.wavesurfer.fireEvent('region-created', this);\r\n    }\r\n\r\n    /* Update region params. */\r\n    update(params) {\r\n        if (null != params.start) {\r\n            this.start = Number(params.start);\r\n        }\r\n        if (null != params.end) {\r\n            this.end = Number(params.end);\r\n        }\r\n        if (null != params.loop) {\r\n            this.loop = Boolean(params.loop);\r\n        }\r\n        if (null != params.color) {\r\n            this.color = params.color;\r\n        }\r\n        if (null != params.data) {\r\n            this.data = params.data;\r\n        }\r\n        if (null != params.resize) {\r\n            this.resize = Boolean(params.resize);\r\n        }\r\n        if (null != params.drag) {\r\n            this.drag = Boolean(params.drag);\r\n        }\r\n        if (null != params.maxLength) {\r\n            this.maxLength = Number(params.maxLength);\r\n        }\r\n        if (null != params.minLength) {\r\n            this.minLength = Number(params.minLength);\r\n        }\r\n        if (null != params.attributes) {\r\n            this.attributes = params.attributes;\r\n        }\r\n\r\n        this.updateRender();\r\n        this.fireEvent('update');\r\n        this.wavesurfer.fireEvent('region-updated', this);\r\n    }\r\n\r\n    /* Remove a single region. */\r\n    remove() {\r\n        if (this.element) {\r\n            this.wrapper.removeChild(this.element);\r\n            this.element = null;\r\n            this.fireEvent('remove');\r\n            this.wavesurfer.un('zoom', this._onRedraw);\r\n            this.wavesurfer.un('redraw', this._onRedraw);\r\n            this.wavesurfer.fireEvent('region-removed', this);\r\n        }\r\n    }\r\n\r\n    /* Play the audio region. */\r\n    play() {\r\n        this.wavesurfer.play(this.start, this.end);\r\n        this.fireEvent('play');\r\n        this.wavesurfer.fireEvent('region-play', this);\r\n    }\r\n\r\n    /* Play the region in loop. */\r\n    playLoop() {\r\n        this.play();\r\n        this.once('out', () => this.playLoop());\r\n    }\r\n\r\n    /* Render a region as a DOM element. */\r\n    render() {\r\n        const regionEl = document.createElement('region');\r\n        regionEl.className = 'wavesurfer-region';\r\n        regionEl.title = this.formatTime(this.start, this.end);\r\n        regionEl.setAttribute('data-id', this.id);\r\n\r\n        for (const attrname in this.attributes) {\r\n            regionEl.setAttribute(\r\n                'data-region-' + attrname,\r\n                this.attributes[attrname]\r\n            );\r\n        }\r\n\r\n        const width = this.wrapper.scrollWidth;\r\n        this.style(regionEl, {\r\n            position: 'absolute',\r\n            zIndex: 2,\r\n            height: '100%',\r\n            top: '0px'\r\n        });\r\n\r\n        /* Resize handles */\r\n        if (this.resize) {\r\n            const handleLeft = regionEl.appendChild(\r\n                document.createElement('handle')\r\n            );\r\n            const handleRight = regionEl.appendChild(\r\n                document.createElement('handle')\r\n            );\r\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\r\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\r\n            const css = {\r\n                cursor: 'col-resize',\r\n                position: 'absolute',\r\n                left: '0px',\r\n                top: '0px',\r\n                width: '1%',\r\n                maxWidth: '4px',\r\n                height: '100%'\r\n            };\r\n            this.style(handleLeft, css);\r\n            this.style(handleRight, css);\r\n            this.style(handleRight, {\r\n                left: '100%'\r\n            });\r\n        }\r\n\r\n        this.element = this.wrapper.appendChild(regionEl);\r\n        this.updateRender();\r\n        this.bindEvents(regionEl);\r\n    }\r\n\r\n    formatTime(start, end) {\r\n        return (start == end ? [start] : [start, end])\r\n            .map(time =>\r\n                [\r\n                    Math.floor((time % 3600) / 60), // minutes\r\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\r\n                ].join(':')\r\n            )\r\n            .join('-');\r\n    }\r\n\r\n    getWidth() {\r\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\r\n    }\r\n\r\n    /* Update element's position, width, color. */\r\n    updateRender() {\r\n        // duration varies during loading process, so don't overwrite important data\r\n        const dur = this.wavesurfer.getDuration();\r\n        const width = this.getWidth();\r\n\r\n        var startLimited = this.start;\r\n        var endLimited = this.end;\r\n        if (startLimited < 0) {\r\n            startLimited = 0;\r\n            endLimited = endLimited - startLimited;\r\n        }\r\n        if (endLimited > dur) {\r\n            endLimited = dur;\r\n            startLimited = dur - (endLimited - startLimited);\r\n        }\r\n\r\n        if (this.minLength != null) {\r\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\r\n        }\r\n\r\n        if (this.maxLength != null) {\r\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\r\n        }\r\n\r\n        if (this.element != null) {\r\n            // Calculate the left and width values of the region such that\r\n            // no gaps appear between regions.\r\n            const left = Math.round((startLimited / dur) * width);\r\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\r\n\r\n            this.style(this.element, {\r\n                left: left + 'px',\r\n                width: regionWidth + 'px',\r\n                backgroundColor: this.color,\r\n                cursor: this.drag ? 'move' : 'default'\r\n            });\r\n\r\n            for (const attrname in this.attributes) {\r\n                this.element.setAttribute(\r\n                    'data-region-' + attrname,\r\n                    this.attributes[attrname]\r\n                );\r\n            }\r\n\r\n            this.element.title = this.formatTime(this.start, this.end);\r\n        }\r\n    }\r\n\r\n    /* Bind audio events. */\r\n    bindInOut() {\r\n        this.firedIn = false;\r\n        this.firedOut = false;\r\n\r\n        const onProcess = time => {\r\n            if (\r\n                !this.firedOut &&\r\n                this.firedIn &&\r\n                (this.start >= Math.round(time * 100) / 100 ||\r\n                    this.end <= Math.round(time * 100) / 100)\r\n            ) {\r\n                this.firedOut = true;\r\n                this.firedIn = false;\r\n                this.fireEvent('out');\r\n                this.wavesurfer.fireEvent('region-out', this);\r\n            }\r\n            if (!this.firedIn && this.start <= time && this.end > time) {\r\n                this.firedIn = true;\r\n                this.firedOut = false;\r\n                this.fireEvent('in');\r\n                this.wavesurfer.fireEvent('region-in', this);\r\n            }\r\n        };\r\n\r\n        this.wavesurfer.backend.on('audioprocess', onProcess);\r\n\r\n        this.on('remove', () => {\r\n            this.wavesurfer.backend.un('audioprocess', onProcess);\r\n        });\r\n\r\n        /* Loop playback. */\r\n        this.on('out', () => {\r\n            if (this.loop) {\r\n                this.wavesurfer.play(this.start);\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Bind DOM events. */\r\n    bindEvents() {\r\n        this.element.addEventListener('mouseenter', e => {\r\n            this.fireEvent('mouseenter', e);\r\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('mouseleave', e => {\r\n            this.fireEvent('mouseleave', e);\r\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            this.fireEvent('click', e);\r\n            this.wavesurfer.fireEvent('region-click', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('dblclick', e => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.fireEvent('dblclick', e);\r\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\r\n        });\r\n\r\n        /* Drag or resize on mousemove. */\r\n        (this.drag || this.resize) &&\r\n            (() => {\r\n                const container = this.wavesurfer.drawer.container;\r\n                const duration = this.wavesurfer.getDuration();\r\n                const scrollSpeed = this.scrollSpeed;\r\n                const scrollThreshold = this.scrollThreshold;\r\n                let startTime;\r\n                let touchId;\r\n                let drag;\r\n                let maxScroll;\r\n                let resize;\r\n                let updated = false;\r\n                let scrollDirection;\r\n                let wrapperRect;\r\n\r\n                // Scroll when the user is dragging within the threshold\r\n                const edgeScroll = e => {\r\n                    if (!scrollDirection || (!drag && !resize)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Update scroll position\r\n                    let scrollLeft =\r\n                        this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\r\n                    this.wrapper.scrollLeft = scrollLeft = Math.min(\r\n                        maxScroll,\r\n                        Math.max(0, scrollLeft)\r\n                    );\r\n\r\n                    // Get the currently selected time according to the mouse position\r\n                    const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                        this.wavesurfer.drawer.handleEvent(e) * duration\r\n                    );\r\n                    const delta = time - startTime;\r\n                    startTime = time;\r\n\r\n                    // Continue dragging or resizing\r\n                    drag ? this.onDrag(delta) : this.onResize(delta, resize);\r\n\r\n                    // Repeat\r\n                    window.requestAnimationFrame(() => {\r\n                        edgeScroll(e);\r\n                    });\r\n                };\r\n\r\n                const onDown = e => {\r\n                    if (e.touches && e.touches.length > 1) {\r\n                        return;\r\n                    }\r\n                    touchId = e.targetTouches\r\n                        ? e.targetTouches[0].identifier\r\n                        : null;\r\n\r\n                    // stop the event propagation, if this region is resizable or draggable\r\n                    // and the event is therefore handled here.\r\n                    if (this.drag || this.resize) {\r\n                        e.stopPropagation();\r\n                    }\r\n\r\n                    // Store the selected startTime we begun dragging or resizing\r\n                    startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                        this.wavesurfer.drawer.handleEvent(e, true) * duration\r\n                    );\r\n\r\n                    // Store for scroll calculations\r\n                    maxScroll =\r\n                        this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n                    wrapperRect = this.wrapper.getBoundingClientRect();\r\n\r\n                    if (e.target.tagName.toLowerCase() == 'handle') {\r\n                        if (\r\n                            e.target.classList.contains(\r\n                                'wavesurfer-handle-start'\r\n                            )\r\n                        ) {\r\n                            resize = 'start';\r\n                        } else {\r\n                            resize = 'end';\r\n                        }\r\n                    } else {\r\n                        drag = true;\r\n                        resize = false;\r\n                    }\r\n                };\r\n                const onUp = e => {\r\n                    if (e.touches && e.touches.length > 1) {\r\n                        return;\r\n                    }\r\n\r\n                    if (drag || resize) {\r\n                        drag = false;\r\n                        scrollDirection = null;\r\n                        resize = false;\r\n                    }\r\n\r\n                    if (updated) {\r\n                        updated = false;\r\n                        this.util.preventClick();\r\n                        this.fireEvent('update-end', e);\r\n                        this.wavesurfer.fireEvent('region-update-end', this, e);\r\n                    }\r\n                };\r\n                const onMove = e => {\r\n                    if (e.touches && e.touches.length > 1) {\r\n                        return;\r\n                    }\r\n                    if (\r\n                        e.targetTouches &&\r\n                        e.targetTouches[0].identifier != touchId\r\n                    ) {\r\n                        return;\r\n                    }\r\n\r\n                    if (drag || resize) {\r\n                        const oldTime = startTime;\r\n                        const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                            this.wavesurfer.drawer.handleEvent(e) * duration\r\n                        );\r\n\r\n                        const delta = time - startTime;\r\n                        startTime = time;\r\n\r\n                        // Drag\r\n                        if (this.drag && drag) {\r\n                            updated = updated || !!delta;\r\n                            this.onDrag(delta);\r\n                        }\r\n\r\n                        // Resize\r\n                        if (this.resize && resize) {\r\n                            updated = updated || !!delta;\r\n                            this.onResize(delta, resize);\r\n                        }\r\n\r\n                        if (\r\n                            this.scroll &&\r\n                            container.clientWidth < this.wrapper.scrollWidth\r\n                        ) {\r\n                            if (drag) {\r\n                                // The threshold is not between the mouse and the container edge\r\n                                // but is between the region and the container edge\r\n                                const regionRect = this.element.getBoundingClientRect();\r\n                                let x = regionRect.left - wrapperRect.left;\r\n\r\n                                // Check direction\r\n                                if (time < oldTime && x >= 0) {\r\n                                    scrollDirection = -1;\r\n                                } else if (\r\n                                    time > oldTime &&\r\n                                    x + regionRect.width <= wrapperRect.right\r\n                                ) {\r\n                                    scrollDirection = 1;\r\n                                }\r\n\r\n                                // Check that we are still beyond the threshold\r\n                                if (\r\n                                    (scrollDirection === -1 &&\r\n                                        x > scrollThreshold) ||\r\n                                    (scrollDirection === 1 &&\r\n                                        x + regionRect.width <\r\n                                            wrapperRect.right - scrollThreshold)\r\n                                ) {\r\n                                    scrollDirection = null;\r\n                                }\r\n                            } else {\r\n                                // Mouse based threshold\r\n                                let x = e.clientX - wrapperRect.left;\r\n\r\n                                // Check direction\r\n                                if (x <= scrollThreshold) {\r\n                                    scrollDirection = -1;\r\n                                } else if (\r\n                                    x >=\r\n                                    wrapperRect.right - scrollThreshold\r\n                                ) {\r\n                                    scrollDirection = 1;\r\n                                } else {\r\n                                    scrollDirection = null;\r\n                                }\r\n                            }\r\n\r\n                            scrollDirection && edgeScroll(e);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                this.element.addEventListener('mousedown', onDown);\r\n                this.element.addEventListener('touchstart', onDown);\r\n\r\n                this.wrapper.addEventListener('mousemove', onMove);\r\n                this.wrapper.addEventListener('touchmove', onMove);\r\n\r\n                document.body.addEventListener('mouseup', onUp);\r\n                document.body.addEventListener('touchend', onUp);\r\n\r\n                this.on('remove', () => {\r\n                    document.body.removeEventListener('mouseup', onUp);\r\n                    document.body.removeEventListener('touchend', onUp);\r\n                    this.wrapper.removeEventListener('mousemove', onMove);\r\n                    this.wrapper.removeEventListener('touchmove', onMove);\r\n                });\r\n\r\n                this.wavesurfer.on('destroy', () => {\r\n                    document.body.removeEventListener('mouseup', onUp);\r\n                    document.body.removeEventListener('touchend', onUp);\r\n                });\r\n            })();\r\n    }\r\n\r\n    onDrag(delta) {\r\n        const maxEnd = this.wavesurfer.getDuration();\r\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\r\n            return;\r\n        }\r\n\r\n        this.update({\r\n            start: this.start + delta,\r\n            end: this.end + delta\r\n        });\r\n    }\r\n\r\n    onResize(delta, direction) {\r\n        if (direction == 'start') {\r\n            this.update({\r\n                start: Math.min(this.start + delta, this.end),\r\n                end: Math.max(this.start + delta, this.end)\r\n            });\r\n        } else {\r\n            this.update({\r\n                start: Math.min(this.end + delta, this.start),\r\n                end: Math.max(this.end + delta, this.start)\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {Object} RegionsPluginParams\r\n * @property {?boolean} dragSelection Enable creating regions by dragging with\r\n * the mouse\r\n * @property {?RegionParams[]} regions Regions that should be added upon\r\n * initialisation\r\n * @property {number} slop=2 The sensitivity of the mouse dragging\r\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\r\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('regions')`\r\n */\r\n\r\n/**\r\n * @typedef {Object} RegionParams\r\n * @desc The parameters used to describe a region.\r\n * @example wavesurfer.addRegion(regionParams);\r\n * @property {string} id=→random The id of the region\r\n * @property {number} start=0 The start position of the region (in seconds).\r\n * @property {number} end=0 The end position of the region (in seconds).\r\n * @property {?boolean} loop Whether to loop the region when played back.\r\n * @property {boolean} drag=true Allow/disallow dragging the region.\r\n * @property {boolean} resize=true Allow/disallow resizing the region.\r\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\r\n */\r\n\r\n/**\r\n * Regions are visual overlays on waveform that can be used to play and loop\r\n * portions of audio. Regions can be dragged and resized.\r\n *\r\n * Visual customization is possible via CSS (using the selectors\r\n * `.wavesurfer-region` and `.wavesurfer-handle`).\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n *\r\n * @example\r\n * // es6\r\n * import RegionsPlugin from 'wavesurfer.regions.js';\r\n *\r\n * // commonjs\r\n * var RegionsPlugin = require('wavesurfer.regions.js');\r\n *\r\n * // if you are using <script> tags\r\n * var RegionsPlugin = window.WaveSurfer.regions;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     RegionsPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class RegionsPlugin {\r\n    /**\r\n     * Regions plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'regions',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            staticProps: {\r\n                addRegion(options) {\r\n                    if (!this.initialisedPluginList.regions) {\r\n                        this.initPlugin('regions');\r\n                    }\r\n                    return this.regions.add(options);\r\n                },\r\n\r\n                clearRegions() {\r\n                    this.regions && this.regions.clear();\r\n                },\r\n\r\n                enableDragSelection(options) {\r\n                    if (!this.initialisedPluginList.regions) {\r\n                        this.initPlugin('regions');\r\n                    }\r\n                    this.regions.enableDragSelection(options);\r\n                },\r\n\r\n                disableDragSelection() {\r\n                    this.regions.disableDragSelection();\r\n                }\r\n            },\r\n            instance: RegionsPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n        this.util = ws.util;\r\n        this.util.getRegionSnapToGridValue = value => {\r\n            return this.getRegionSnapToGridValue(value, params);\r\n        };\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            this.util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Region.prototype[key] = this.util.Observer.prototype[key];\r\n        });\r\n        this.wavesurfer.Region = Region;\r\n\r\n        this._onBackendCreated = () => {\r\n            this.wrapper = this.wavesurfer.drawer.wrapper;\r\n            if (this.params.regions) {\r\n                this.params.regions.forEach(region => {\r\n                    this.add(region);\r\n                });\r\n            }\r\n        };\r\n\r\n        // Id-based hash of regions\r\n        this.list = {};\r\n        this._onReady = () => {\r\n            if (this.params.dragSelection) {\r\n                this.enableDragSelection(this.params);\r\n            }\r\n            Object.keys(this.list).forEach(id => {\r\n                this.list[id].updateRender();\r\n            });\r\n        };\r\n    }\r\n\r\n    init() {\r\n        // Check if ws is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onBackendCreated();\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\r\n        this.disableDragSelection();\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Add a region\r\n     *\r\n     * @param {object} params Region parameters\r\n     * @return {Region} The created region\r\n     */\r\n    add(params) {\r\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\r\n\r\n        this.list[region.id] = region;\r\n\r\n        region.on('remove', () => {\r\n            delete this.list[region.id];\r\n        });\r\n\r\n        return region;\r\n    }\r\n\r\n    /**\r\n     * Remove all regions\r\n     */\r\n    clear() {\r\n        Object.keys(this.list).forEach(id => {\r\n            this.list[id].remove();\r\n        });\r\n    }\r\n\r\n    enableDragSelection(params) {\r\n        const slop = params.slop || 2;\r\n        const container = this.wavesurfer.drawer.container;\r\n        const scroll =\r\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\r\n        const scrollSpeed = params.scrollSpeed || 1;\r\n        const scrollThreshold = params.scrollThreshold || 10;\r\n        let drag;\r\n        let duration = this.wavesurfer.getDuration();\r\n        let maxScroll;\r\n        let start;\r\n        let region;\r\n        let touchId;\r\n        let pxMove = 0;\r\n        let scrollDirection;\r\n        let wrapperRect;\r\n\r\n        // Scroll when the user is dragging within the threshold\r\n        const edgeScroll = e => {\r\n            if (!region || !scrollDirection) {\r\n                return;\r\n            }\r\n\r\n            // Update scroll position\r\n            let scrollLeft =\r\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\r\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\r\n                maxScroll,\r\n                Math.max(0, scrollLeft)\r\n            );\r\n\r\n            // Update range\r\n            const end = this.wavesurfer.drawer.handleEvent(e);\r\n            region.update({\r\n                start: Math.min(end * duration, start * duration),\r\n                end: Math.max(end * duration, start * duration)\r\n            });\r\n\r\n            // Check that there is more to scroll and repeat\r\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\r\n                window.requestAnimationFrame(() => {\r\n                    edgeScroll(e);\r\n                });\r\n            }\r\n        };\r\n\r\n        const eventDown = e => {\r\n            if (e.touches && e.touches.length > 1) {\r\n                return;\r\n            }\r\n            duration = this.wavesurfer.getDuration();\r\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\r\n\r\n            // Store for scroll calculations\r\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n            wrapperRect = this.wrapper.getBoundingClientRect();\r\n\r\n            drag = true;\r\n            start = this.wavesurfer.drawer.handleEvent(e, true);\r\n            region = null;\r\n            scrollDirection = null;\r\n        };\r\n        this.wrapper.addEventListener('mousedown', eventDown);\r\n        this.wrapper.addEventListener('touchstart', eventDown);\r\n        this.on('disable-drag-selection', () => {\r\n            this.wrapper.removeEventListener('touchstart', eventDown);\r\n            this.wrapper.removeEventListener('mousedown', eventDown);\r\n        });\r\n\r\n        const eventUp = e => {\r\n            if (e.touches && e.touches.length > 1) {\r\n                return;\r\n            }\r\n\r\n            drag = false;\r\n            pxMove = 0;\r\n            scrollDirection = null;\r\n\r\n            if (region) {\r\n                this.util.preventClick();\r\n                region.fireEvent('update-end', e);\r\n                this.wavesurfer.fireEvent('region-update-end', region, e);\r\n            }\r\n\r\n            region = null;\r\n        };\r\n        this.wrapper.addEventListener('mouseup', eventUp);\r\n        this.wrapper.addEventListener('touchend', eventUp);\r\n\r\n        document.body.addEventListener('mouseup', eventUp);\r\n        document.body.addEventListener('touchend', eventUp);\r\n        this.on('disable-drag-selection', () => {\r\n            document.body.removeEventListener('mouseup', eventUp);\r\n            document.body.removeEventListener('touchend', eventUp);\r\n            this.wrapper.removeEventListener('touchend', eventUp);\r\n            this.wrapper.removeEventListener('mouseup', eventUp);\r\n        });\r\n\r\n        const eventMove = e => {\r\n            if (!drag) {\r\n                return;\r\n            }\r\n            if (++pxMove <= slop) {\r\n                return;\r\n            }\r\n\r\n            if (e.touches && e.touches.length > 1) {\r\n                return;\r\n            }\r\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\r\n                return;\r\n            }\r\n\r\n            if (!region) {\r\n                region = this.add(params || {});\r\n            }\r\n\r\n            const end = this.wavesurfer.drawer.handleEvent(e);\r\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                start * duration\r\n            );\r\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                end * duration\r\n            );\r\n            region.update({\r\n                start: Math.min(endUpdate, startUpdate),\r\n                end: Math.max(endUpdate, startUpdate)\r\n            });\r\n\r\n            // If scrolling is enabled\r\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\r\n                // Check threshold based on mouse\r\n                const x = e.clientX - wrapperRect.left;\r\n                if (x <= scrollThreshold) {\r\n                    scrollDirection = -1;\r\n                } else if (x >= wrapperRect.right - scrollThreshold) {\r\n                    scrollDirection = 1;\r\n                } else {\r\n                    scrollDirection = null;\r\n                }\r\n                scrollDirection && edgeScroll(e);\r\n            }\r\n        };\r\n        this.wrapper.addEventListener('mousemove', eventMove);\r\n        this.wrapper.addEventListener('touchmove', eventMove);\r\n        this.on('disable-drag-selection', () => {\r\n            this.wrapper.removeEventListener('touchmove', eventMove);\r\n            this.wrapper.removeEventListener('mousemove', eventMove);\r\n        });\r\n    }\r\n\r\n    disableDragSelection() {\r\n        this.fireEvent('disable-drag-selection');\r\n    }\r\n\r\n    /**\r\n     * Get current region\r\n     *\r\n     * The smallest region that contains the current time. If several such\r\n     * regions exist, take the first. Return `null` if none exist.\r\n     *\r\n     * @returns {Region} The current region\r\n     */\r\n    getCurrentRegion() {\r\n        const time = this.wavesurfer.getCurrentTime();\r\n        let min = null;\r\n        Object.keys(this.list).forEach(id => {\r\n            const cur = this.list[id];\r\n            if (cur.start <= time && cur.end >= time) {\r\n                if (!min || cur.end - cur.start < min.end - min.start) {\r\n                    min = cur;\r\n                }\r\n            }\r\n        });\r\n\r\n        return min;\r\n    }\r\n\r\n    /**\r\n     * Match the value to the grid, if required\r\n     *\r\n     * If the regions plugin params have a snapToGridInterval set, return the\r\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\r\n     * the passed value will be returned without modification.\r\n     *\r\n     * @param {number} value the value to snap to the grid, if needed\r\n     * @param {Object} params the regions plugin params\r\n     * @returns {number} value\r\n     */\r\n    getRegionSnapToGridValue(value, params) {\r\n        if (params.snapToGridInterval) {\r\n            // the regions should snap to a grid\r\n            const offset = params.snapToGridOffset || 0;\r\n            return (\r\n                Math.round((value - offset) / params.snapToGridInterval) *\r\n                    params.snapToGridInterval +\r\n                offset\r\n            );\r\n        }\r\n\r\n        // no snap-to-grid\r\n        return value;\r\n    }\r\n}\r\n"],"sourceRoot":""}